{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Volumes/Coding/NPM/Class Projects/C-80/screens/Meteors.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar MeteorScreen = function (_Component) {\n  _inherits(MeteorScreen, _Component);\n\n  var _super = _createSuper(MeteorScreen);\n\n  function MeteorScreen(props) {\n    var _this;\n\n    _classCallCheck(this, MeteorScreen);\n\n    _this = _super.call(this, props);\n\n    _this.get_DATA = function () {\n      axios.get(\"https://api.nasa.gov/neo/rest/v1/feed?api_key=0QM2FmFNgHZO7ltpI51Dh4ixoJCaHRCELwR5dhFT\").then(function (Response_get) {\n        _this.setState({\n          Meteors: Response_get.data.near_earth_objects\n        });\n      }).catch(function (error) {\n        Alert.alert(\"error\", error.message);\n      });\n    };\n\n    _this.state = {\n      Meteors: {}\n    };\n    return _this;\n  }\n\n  _createClass(MeteorScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.get_DATA();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (Object.keys(this.state.Meteors).length == 0) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"Black\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }\n        }));\n      } else {\n        var meteotary = Object.keys(this.state.Meteors).map(function (meteor_date) {\n          return _this2.state.Meteors[meteor_date];\n        });\n        var meteorinfo = [].concat.apply([], meteotary);\n        meteorinfo.forEach(function (element) {\n          var diameter = (element.estimated_diameter.kilometers.estimated_diameter_min + element.estimated_diameter.kilometers.estimated_diameter_max) / 2;\n          var scary_element = diameter / element.close_approach_data[0].miss_distance.kilometers / 1000000000;\n          element.scary_element = scary_element;\n        });\n        meteorinfo.sort(function (a, b) {\n          return b.scary_element - a.scary_element;\n        });\n        meteorinfo = meteorinfo.slice(0, 5);\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }, React.createElement(FlatList, {\n          data: meteorinfo,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            var meteorinfo = item;\n            var bgimg;\n\n            if (meteorinfo.scary_element <= 30) {\n              bgimg = require(\"../assets/icon.png\");\n            } else if (meteorinfo.scary_element <= 75) {\n              bgimg = require(\"../assets/meteor.png\");\n            } else {\n              bgimg = require(\"../assets/ISS.png\");\n            }\n\n            return React.createElement(View, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }\n            }, React.createElement(ImageBackground, {\n              source: bgimg,\n              style: styles.bg,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }\n            }));\n          },\n          horizontal: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }\n        }));\n      }\n    }\n  }]);\n\n  return MeteorScreen;\n}(Component);\n\nexport { MeteorScreen as default };\nvar styles = StyleSheet.create({\n  bg: {\n    flex: 1,\n    resizeMode: \"cover\"\n  },\n  img: {\n    width: 100,\n    height: 60,\n    resizeMode: \"contain\"\n  },\n  img2: {\n    flex: 1,\n    position: \"absolute\",\n    resizeMode: \"contain\",\n    width: \"100%\",\n    height: \"100%\",\n    marginTop: -50,\n    transform: [{\n      rotate: \"-100deg\"\n    }]\n  },\n  txt: {\n    color: \"white\",\n    textAlign: \"left\",\n    fontSize: 40,\n    marginTop: 70,\n    marginLeft: 10,\n    fontWeight: \"bold\",\n    textShadowOffset: {\n      width: 0.5,\n      height: 0.5\n    },\n    textShadowRadius: 2,\n    textShadowColor: 'grey'\n  },\n  txt1: {\n    color: \"white\",\n    right: -15,\n    bottom: -535,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 2,\n    textShadowColor: 'black'\n  },\n  txt2: {\n    color: \"white\",\n    textAlign: \"left\",\n    fontSize: 40,\n    marginTop: 70,\n    marginLeft: 30,\n    marginBottom: 15,\n    fontWeight: \"bold\",\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'black'\n  },\n  TOuchOPA: {\n    backgroundColor: \"#282424\",\n    margin: 20,\n    marginTop: 100,\n    borderRadius: 30\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Class Projects/C-80/screens/Meteors.js"],"names":["axios","React","Component","MeteorScreen","props","get_DATA","get","then","Response_get","setState","Meteors","data","near_earth_objects","catch","error","Alert","alert","message","state","Object","keys","length","flex","justifyContent","meteotary","map","meteor_date","meteorinfo","concat","apply","forEach","element","diameter","estimated_diameter","kilometers","estimated_diameter_min","estimated_diameter_max","scary_element","close_approach_data","miss_distance","sort","a","b","slice","item","index","toString","bgimg","require","styles","bg","StyleSheet","create","resizeMode","img","width","height","img2","position","marginTop","transform","rotate","txt","color","textAlign","fontSize","marginLeft","fontWeight","textShadowOffset","textShadowRadius","textShadowColor","txt1","right","bottom","txt2","marginBottom","TOuchOPA","backgroundColor","margin","borderRadius"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Text, View, ImageBackground, StyleSheet, Alert, Image, ActivityIndicator, FlatList } from 'react-native';\n\nexport default class MeteorScreen extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            Meteors: {}\n        }\n    }\n\n    componentDidMount() {\n        this.get_DATA()\n    }\n\n    get_DATA = () => {\n        axios.get(\"https://api.nasa.gov/neo/rest/v1/feed?api_key=0QM2FmFNgHZO7ltpI51Dh4ixoJCaHRCELwR5dhFT\").then(Response_get => {\n            this.setState({ Meteors: Response_get.data.near_earth_objects })\n        })\n            .catch(\n                error => {\n                    Alert.alert(\"error\", error.message)\n                }\n            )\n    }\n\n    render() {\n        if (Object.keys(this.state.Meteors).length == 0) {\n            return (\n                <View style={{ flex: 1, justifyContent: \"center\" }}>\n                    <ActivityIndicator size=\"large\" color=\"Black\" />\n                </View>\n            )\n        }\n        else {\n\n            let meteotary = Object.keys(this.state.Meteors).map(meteor_date => {\n                return (\n                    this.state.Meteors[meteor_date]\n                )\n            })\n\n            let meteorinfo = [].concat.apply([], meteotary)\n\n            meteorinfo.forEach(function (element) {\n                let diameter = (element.estimated_diameter.kilometers.estimated_diameter_min + element.estimated_diameter.kilometers.estimated_diameter_max) / 2\n                let scary_element = (diameter / (element.close_approach_data[0].miss_distance.kilometers) / 1000000000)\n                element.scary_element = scary_element\n\n            })\n\n            meteorinfo.sort(function (a, b) {\n                return b.scary_element - a.scary_element\n            })\n\n            meteorinfo = meteorinfo.slice(0, 5)\n\n            return (\n                <View style={{ flex: 1, }}>\n                    <FlatList data={meteorinfo}\n                        keyExtractor={(item, index) => index.toString()}\n                        renderItem={\n                            ({ item }) => {\n                                let meteorinfo = item\n                                let bgimg\n\n                                if (meteorinfo.scary_element <= 30) {\n                                    bgimg = require(\"../assets/icon.png\")\n                                }\n                                else if (meteorinfo.scary_element <= 75) {\n                                    bgimg = require(\"../assets/meteor.png\")\n                                }\n                                else {\n                                    bgimg = require(\"../assets/ISS.png\")\n                                }\n                                return (\n\n                                    <View>\n                                        <ImageBackground source={bgimg} style={styles.bg} />\n                                    </View>\n                                )\n                            }\n                        }\n\n\n                        horizontal={true}\n                    />\n\n                </View>\n            )\n        }\n    }\n}\n\n\n\nconst styles = StyleSheet.create({\n    bg: {\n        flex: 1,\n        resizeMode: \"cover\",\n    },\n    img: {\n        width: 100,\n        height: 60,\n        resizeMode: \"contain\",\n    },\n    img2: {\n        flex: 1,\n        position: \"absolute\",\n        resizeMode: \"contain\",\n        width: \"100%\",\n        height: \"100%\",\n        marginTop: -50,\n        transform: [{ rotate: \"-100deg\" }],\n    },\n    txt: {\n\n        color: \"white\",\n        textAlign: \"left\",\n        fontSize: 40,\n        marginTop: 70,\n        marginLeft: 10,\n        fontWeight: \"bold\",\n        textShadowOffset: { width: 0.5, height: 0.5 },\n        textShadowRadius: 2,\n        textShadowColor: 'grey',\n    },\n    txt1: {\n        color: \"white\",\n        right: -15,\n        bottom: -535,\n        fontSize: 18,\n\n        fontWeight: \"bold\",\n        textShadowOffset: { width: 2, height: 2 },\n        textShadowRadius: 2,\n        textShadowColor: 'black',\n    },\n    txt2: {\n        color: \"white\",\n        textAlign: \"left\",\n        fontSize: 40,\n        marginTop: 70,\n        marginLeft: 30,\n        marginBottom: 15,\n        fontWeight: \"bold\",\n        textShadowOffset: { width: 2, height: 2 },\n        textShadowRadius: 10,\n        textShadowColor: 'black',\n    },\n    TOuchOPA: {\n        backgroundColor: \"#282424\",\n        margin: 20,\n        marginTop: 100,\n        borderRadius: 30,\n    }\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Volumes/Coding/NPM/Class Projects/C-80/screens/IssLocation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport MapView, { Marker } from 'react-native-maps';\n\nvar IssLocationScreen = function (_Component) {\n  _inherits(IssLocationScreen, _Component);\n\n  var _super = _createSuper(IssLocationScreen);\n\n  function IssLocationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, IssLocationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.get_DATA = function () {\n      axios.get(\"https://api.wheretheiss.at/v1/satellites/25544\").then(function (Response_get) {\n        _this.setState({\n          ISS_LOCATION: Response_get.data\n        });\n      }).catch(function (error) {\n        Alert.alert(\"error\", error.message);\n      });\n    };\n\n    _this.state = {\n      ISS_LOCATION: {}\n    };\n    return _this;\n  }\n\n  _createClass(IssLocationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.get_DATA();\n\n      try {\n        setInterval(function _callee() {\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this2.get_DATA(), 500;\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Object.keys(this.state.ISS_LOCATION).length == 0) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"Black\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }\n        }, React.createElement(ImageBackground, {\n          source: require(\"../assets/bg.png\"),\n          style: styles.bg,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.txt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }\n        }, \"International Space Station Location\"), React.createElement(MapView, {\n          region: {\n            latitude: this.state.ISS_LOCATION.latitude,\n            longitude: this.state.ISS_LOCATION.longitude,\n            latitudeDelta: 180,\n            longitudeDelta: 180\n          },\n          style: {\n            width: '100%',\n            height: '100%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }, React.createElement(Marker, {\n          coordinate: {\n            latitude: this.state.ISS_LOCATION.latitude,\n            longitude: this.state.ISS_LOCATION.longitude\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/ISS.png\"),\n          style: styles.img,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }\n        })), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: styles.txt1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }\n        }, \"lat : \", this.state.ISS_LOCATION.latitude), React.createElement(Text, {\n          style: styles.txt1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }\n        }, \"log : \", this.state.ISS_LOCATION.longitude), React.createElement(Text, {\n          style: styles.txt1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }\n        }, \"alt : \", this.state.ISS_LOCATION.altitude), React.createElement(Text, {\n          style: styles.txt1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }\n        }, \"velo : \", this.state.ISS_LOCATION.velocity), React.createElement(Text, {\n          style: styles.txt1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }\n        }, \"Visible : \", this.state.ISS_LOCATION.visibility)))));\n      }\n    }\n  }]);\n\n  return IssLocationScreen;\n}(Component);\n\nexport { IssLocationScreen as default };\nvar styles = StyleSheet.create({\n  bg: {\n    flex: 1,\n    resizeMode: \"cover\"\n  },\n  img: {\n    width: 100,\n    height: 60,\n    resizeMode: \"contain\"\n  },\n  img2: {\n    flex: 1,\n    position: \"absolute\",\n    resizeMode: \"contain\",\n    width: \"100%\",\n    height: \"100%\",\n    marginTop: -50,\n    transform: [{\n      rotate: \"-100deg\"\n    }]\n  },\n  txt: {\n    color: \"white\",\n    textAlign: \"left\",\n    fontSize: 40,\n    marginTop: 70,\n    marginLeft: 10,\n    fontWeight: \"bold\",\n    textShadowOffset: {\n      width: 0.5,\n      height: 0.5\n    },\n    textShadowRadius: 2,\n    textShadowColor: 'grey'\n  },\n  txt1: {\n    color: \"white\",\n    right: -15,\n    bottom: -535,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 2,\n    textShadowColor: 'black'\n  },\n  txt2: {\n    color: \"white\",\n    textAlign: \"left\",\n    fontSize: 40,\n    marginTop: 70,\n    marginLeft: 30,\n    marginBottom: 15,\n    fontWeight: \"bold\",\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'black'\n  },\n  TOuchOPA: {\n    backgroundColor: \"#282424\",\n    margin: 20,\n    marginTop: 100,\n    borderRadius: 30\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Class Projects/C-80/screens/IssLocation.js"],"names":["axios","React","Component","MapView","Marker","IssLocationScreen","props","get_DATA","get","then","Response_get","setState","ISS_LOCATION","data","catch","error","Alert","alert","message","state","setInterval","console","log","Object","keys","length","flex","justifyContent","require","styles","bg","txt","latitude","longitude","latitudeDelta","longitudeDelta","width","height","img","txt1","altitude","velocity","visibility","StyleSheet","create","resizeMode","img2","position","marginTop","transform","rotate","color","textAlign","fontSize","marginLeft","fontWeight","textShadowOffset","textShadowRadius","textShadowColor","right","bottom","txt2","marginBottom","TOuchOPA","backgroundColor","margin","borderRadius"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Text, View, ImageBackground, StyleSheet, Alert, Image, ActivityIndicator } from 'react-native';\nimport MapView, { Marker } from 'react-native-maps';\n\nexport default class IssLocationScreen extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ISS_LOCATION : {}\n        }\n    }\n\n    componentDidMount() {\n        this.get_DATA()\n        try {\n            setInterval(async () => {\n                this.get_DATA(), 500\n            })\n        }\n        catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    get_DATA = () => {\n        axios.get(\"https://api.wheretheiss.at/v1/satellites/25544\").then(Response_get => {\n            this.setState({ ISS_LOCATION : Response_get.data })\n        })\n            .catch(\n                error => {\n                    Alert.alert(\"error\", error.message)\n                }\n            )\n    }\n\n    render() {\n        if (Object.keys(this.state.ISS_LOCATION).length == 0) {\n            return (\n                <View style={{ flex: 1, justifyContent:\"center\"}}>\n                    <ActivityIndicator size=\"large\" color=\"Black\"/>\n                </View>\n            )\n        }\n        else {\n            return (\n                <View style={{ flex: 1, }}>\n                    <ImageBackground source={require(\"../assets/bg.png\")} style={styles.bg}>\n                        <Text style={styles.txt}>International Space Station Location</Text>\n\n                        <MapView\n                            region={{\n                                latitude: this.state.ISS_LOCATION.latitude,\n                                longitude: this.state.ISS_LOCATION.longitude,\n                                latitudeDelta: 180,\n                                longitudeDelta: 180,\n                            }}\n                            style={{ width: '100%', height: '100%' }}>\n                            <Marker coordinate={{\n                                latitude: this.state.ISS_LOCATION.latitude,\n                                longitude: this.state.ISS_LOCATION.longitude,\n                            }}>\n                                <Image source={require(\"../assets/ISS.png\")} style={styles.img} />\n                            </Marker>\n                            <View>\n                                <Text style={styles.txt1}>lat : {this.state.ISS_LOCATION.latitude}</Text>\n                                <Text style={styles.txt1}>log : {this.state.ISS_LOCATION.longitude}</Text>\n                                <Text style={styles.txt1}>alt : {this.state.ISS_LOCATION.altitude}</Text>\n                                <Text style={styles.txt1}>velo : {this.state.ISS_LOCATION.velocity}</Text>\n                                <Text style={styles.txt1}>Visible : {this.state.ISS_LOCATION.visibility}</Text>\n                            </View>\n\n                        </MapView>\n                    </ImageBackground>\n                </View>\n            )\n        }\n    }\n}\n\n\n\nconst styles = StyleSheet.create({\n    bg: {\n        flex: 1,\n        resizeMode: \"cover\",\n    },\n    img: {\n        width: 100,\n        height: 60,\n        resizeMode: \"contain\",\n    },\n    img2: {\n        flex: 1,\n        position: \"absolute\",\n        resizeMode: \"contain\",\n        width: \"100%\",\n        height: \"100%\",\n        marginTop: -50,\n        transform: [{ rotate: \"-100deg\" }],\n    },\n    txt: {\n\n        color: \"white\",\n        textAlign: \"left\",\n        fontSize: 40,\n        marginTop: 70,\n        marginLeft: 10,\n        fontWeight: \"bold\",\n        textShadowOffset: { width: 0.5, height: 0.5 },\n        textShadowRadius: 2,\n        textShadowColor: 'grey',\n    },\n    txt1: {\n        color: \"white\",\n        right: -15,\n        bottom: -535,\n        fontSize: 18,\n\n        fontWeight: \"bold\",\n        textShadowOffset: { width: 2, height: 2 },\n        textShadowRadius: 2,\n        textShadowColor: 'black',\n    },\n    txt2: {\n        color: \"white\",\n        textAlign: \"left\",\n        fontSize: 40,\n        marginTop: 70,\n        marginLeft: 30,\n        marginBottom: 15,\n        fontWeight: \"bold\",\n        textShadowOffset: { width: 2, height: 2 },\n        textShadowRadius: 10,\n        textShadowColor: 'black',\n    },\n    TOuchOPA: {\n        backgroundColor: \"#282424\",\n        margin: 20,\n        marginTop: 100,\n        borderRadius: 30,\n    }\n});"]},"metadata":{},"sourceType":"module"}